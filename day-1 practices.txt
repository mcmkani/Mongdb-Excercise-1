

Find all the information about each products
db.products.find()
/

Find the product price which are between 400 to 800
 db.products.find({ $and: [{product_price : {$gte:400}}, {product_price: {$lte:800}}] })
/

Find the product price which are not between 400 to 600
db.products.find({$or:[{"product_price":{$lte:400}},{"product_price":{$gte:600}}]})
/

List the four product which are grater than 500 in price 
db.products.find({product_price:{ $gt:500  }})
/

Find the product name and product material of each products
db.products.find({},{ _id: 0, product_name:1, product_material:1  })
/

Find the product with a row id of 10
 db.products.find({id:{$eq:"10"}})
/

Find only the product name and product material
duplicate question
/

Find all products which contain the value of soft in product material 
db.products.find({product_material: { $eq: "Soft"}})
/

Find products which contain product color indigo  and product price 492.00
db.products.find({$and:[{product_price:492},{product_color:"indigo"}]})
/

Delete the products which product price value are same
db.products.aggregate([ {$group: { _id: {product_price: "$product_price"}, uniqueIds: {$addToSet: "$_id"},count: {$sum: 1}}},{$match: { count: {"$gt": 1}}}]).forEach(function(doc){ doc.uniqueIds.shift();db.products.remove({_id:{$in:doc.uniqueIds} });  });
/